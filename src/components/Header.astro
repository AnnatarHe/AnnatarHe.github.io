---
import { Menu, X } from 'lucide-react';
const currentPath = Astro.url.pathname;
---

<header class="fixed top-0 left-0 right-0 z-50 bg-black/50 backdrop-blur-sm">
  <nav class="max-w-2xl mx-auto px-4 py-6">
    <div class="flex items-center justify-between">
      <a href="/" class="text-lg font-light text-white hover:text-teal-400 transition-colors">
        AnnatarHe
      </a>
      
      <div class="hidden md:flex items-center gap-8 text-sm">
        <a 
          href="/" 
          class={`text-gray-400 hover:text-teal-400 transition-colors ${currentPath === '/' ? 'text-teal-400' : ''}`}
        >
          Home
        </a>
        <a 
          href="/posts" 
          class={`text-gray-400 hover:text-teal-400 transition-colors ${currentPath.startsWith('/posts') ? 'text-teal-400' : ''}`}
        >
          Posts
        </a>
        <a 
          href="/about" 
          class={`text-gray-400 hover:text-teal-400 transition-colors ${currentPath === '/about' ? 'text-teal-400' : ''}`}
        >
          About
        </a>
      </div>
      
      <!-- Mobile menu button -->
      <button 
        id="mobile-menu-button"
        class="md:hidden text-gray-400 hover:text-teal-400 transition-colors"
        aria-label="Toggle menu"
      >
        <span id="menu-icon">
          <Menu size={20} />
        </span>
        <span id="close-icon" class="hidden">
          <X size={20} />
        </span>
      </button>
    </div>
    
    <!-- Mobile menu -->
    <div id="mobile-menu" class="md:hidden overflow-hidden transition-all duration-300 ease-out max-h-0 opacity-0">
      <div class="pt-6 space-y-4 text-sm">
        <a 
          href="/" 
          class={`block text-gray-400 hover:text-teal-400 transition-colors ${currentPath === '/' ? 'text-teal-400' : ''}`}
        >
          Home
        </a>
        <a 
          href="/posts" 
          class={`block text-gray-400 hover:text-teal-400 transition-colors ${currentPath.startsWith('/posts') ? 'text-teal-400' : ''}`}
        >
          Posts
        </a>
        <a 
          href="/about" 
          class={`block text-gray-400 hover:text-teal-400 transition-colors ${currentPath === '/about' ? 'text-teal-400' : ''}`}
        >
          About
        </a>
      </div>
    </div>
  </nav>
</header>

<style>
  #mobile-menu.menu-open {
    max-height: 200px;
    opacity: 1;
  }
  
  /* Icon rotation animation */
  #menu-icon, #close-icon {
    transition: transform 0.3s ease-out, opacity 0.3s ease-out;
  }
  
  #menu-icon.rotate-out {
    transform: rotate(-90deg);
    opacity: 0;
  }
  
  #close-icon.rotate-in {
    transform: rotate(90deg);
  }
</style>

<script>
  // Mobile menu toggle with animations
  const mobileMenuButton = document.getElementById('mobile-menu-button') as HTMLButtonElement | null;
  const mobileMenu = document.getElementById('mobile-menu') as HTMLDivElement | null;
  const menuIcon = document.getElementById('menu-icon') as HTMLSpanElement | null;
  const closeIcon = document.getElementById('close-icon') as HTMLSpanElement | null;
  
  if (mobileMenuButton && mobileMenu && menuIcon && closeIcon) {
    let isOpen = false;
    
    mobileMenuButton.addEventListener('click', () => {
      isOpen = !isOpen;
      
      if (isOpen) {
        // Open menu
        mobileMenu.classList.add('menu-open');
        menuIcon.classList.add('hidden');
        closeIcon.classList.remove('hidden');
        
        // Animate icons
        menuIcon.classList.add('rotate-out');
        closeIcon.classList.add('rotate-in');
        setTimeout(() => {
          closeIcon.classList.remove('rotate-in');
        }, 10);
      } else {
        // Close menu
        mobileMenu.classList.remove('menu-open');
        
        // Animate icons
        closeIcon.classList.add('rotate-in');
        setTimeout(() => {
          menuIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
          menuIcon.classList.remove('rotate-out');
        }, 300);
      }
    });
    
    // Close menu when clicking outside
    document.addEventListener('click', (e: MouseEvent) => {
      const target = e.target as Node;
      if (isOpen && !mobileMenuButton.contains(target) && !mobileMenu.contains(target)) {
        mobileMenuButton.click();
      }
    });
  }
</script>