---
import Layout from '../../layouts/Layout.astro';
import PageLayout from '../../components/PageLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import A from '../../components/markdown/A.astro';
import Heading1 from '../../components/markdown/Heading1.astro';
import Heading2 from '../../components/markdown/Heading2.astro';
import Heading3 from '../../components/markdown/Heading3.astro';
import Heading4 from '../../components/markdown/Heading4.astro';
import Heading5 from '../../components/markdown/Heading5.astro';
import Heading6 from '../../components/markdown/Heading6.astro';
import Hr from '../../components/markdown/Hr.astro';
import P from '../../components/markdown/P.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<'posts'>;

const post = Astro.props;
const { Content } = await post.render();

const postDate = post.data.date || new Date(post.slug.slice(0, 10));
---

<Layout
  title={`${post.data.title} - AnnatarHe's Blog`}
  description={`${post.data.title} - A blog post by AnnatarHe`}
  type="article"
>
  <PageLayout>
    <article class="max-w-4xl mx-auto px-4 py-16">
      <!-- Post Header -->
      <header class="mb-12 text-center">
        <h1 class="text-3xl md:text-4xl font-bold mb-6 bg-gradient-to-r from-teal-400 to-white bg-clip-text text-transparent">
          {post.data.title}
        </h1>

        <div class="flex flex-col md:flex-row items-center justify-center space-y-4 md:space-y-0 md:space-x-8 text-gray-400">
          <time class="flex items-center">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            {postDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>

          {post.data.tags && (
            <div class="flex flex-wrap gap-2 justify-center">
              {post.data.tags.split(' ').filter(tag => tag.trim()).map((tag) => (
                <span class="text-xs bg-gray-800 text-gray-300 px-3 py-1 rounded-full hover:bg-teal-400 hover:text-black transition-colors">
                  {tag.trim()}
                </span>
              ))}
            </div>
          )}
        </div>
      </header>

      <!-- Post Content -->
      <div class="prose prose-lg prose-invert max-w-none">
        <Content components={{
          a: A,
          h1: Heading1,
          h2: Heading2,
          h3: Heading3,
          h4: Heading4,
          h5: Heading5,
          h6: Heading6,
          hr: Hr,
          p: P,
        }} />
      </div>

      <!-- Post Footer -->
      <footer class="mt-16 pt-8 border-t border-gray-800">
        <div class="flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0">
          <a
            href="/posts"
            class="inline-flex items-center text-teal-400 hover:text-white transition-colors"
          >
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18"></path>
            </svg>
            Back to all posts
          </a>
        </div>
      </footer>
    </article>
  </PageLayout>
</Layout>

<style>
  @reference '../../styles/global.css';
  .prose {
    @apply text-gray-100 leading-loose;
    text-rendering: optimizeLegibility;
    word-break: break-word;
  }

  /* Heading styles handled by components */

  /* Paragraph styles handled by P component */

  /* Link styles handled by A component */

  .prose strong {
    @apply font-bold text-white;
  }

  .prose em {
    @apply italic text-gray-200;
  }

  .prose code {
    @apply bg-gray-800/50 text-teal-400 px-2 py-0.5 rounded text-sm font-mono border border-gray-700/50;
  }

  .prose pre {
    @apply bg-gray-900/50 border border-gray-700 rounded-lg p-4 overflow-x-auto my-6 backdrop-blur-sm;
  }

  .prose pre code {
    @apply bg-transparent p-0 text-gray-100 border-0;
  }

  .prose blockquote {
    @apply border-l-4 border-teal-400 bg-gray-900/50 pl-6 pr-4 py-4 my-6 italic text-gray-200 backdrop-blur-sm;
  }

  .prose blockquote p:last-child {
    @apply mb-0;
  }

  .prose ul,
  .prose ol {
    @apply mb-6 pl-6 space-y-2;
  }

  .prose ul {
    @apply list-disc;
  }

  .prose ol {
    @apply list-decimal;
  }

  .prose li {
    @apply mb-2 pl-2;
  }

  .prose li > p {
    @apply mb-2;
  }

  .prose li > ul,
  .prose li > ol {
    @apply mt-2 mb-2;
  }

  .prose img {
    @apply rounded-lg shadow-2xl mx-auto my-8 max-w-full h-auto;
  }

  .prose figure {
    @apply my-8;
  }

  .prose figcaption {
    @apply text-center text-sm text-gray-400 mt-2;
  }

  .prose table {
    @apply border-collapse w-full my-6 overflow-x-auto block;
  }

  .prose table-wrapper {
    @apply overflow-x-auto;
  }

  .prose th,
  .prose td {
    @apply border border-gray-700 px-4 py-2 text-left;
  }

  .prose th {
    @apply bg-gray-800/50 font-semibold text-white;
  }

  .prose tr:nth-child(even) {
    @apply bg-gray-900/30;
  }

  /* HR styles handled by Hr component */

  .prose iframe {
    @apply rounded-lg my-6 w-full;
  }

  .prose video {
    @apply rounded-lg my-8 max-w-full h-auto;
  }

  .prose kbd {
    @apply bg-gray-800 border border-gray-700 rounded px-2 py-1 text-sm font-mono text-gray-200;
  }

  .prose mark {
    @apply bg-teal-400/20 text-white px-1 rounded;
  }

  .prose del {
    @apply line-through text-gray-500;
  }

  .prose details {
    @apply my-4 p-4 bg-gray-900/50 rounded-lg border border-gray-700;
  }

  .prose summary {
    @apply cursor-pointer font-semibold text-white hover:text-teal-400 transition-colors;
  }

  .prose details[open] summary {
    @apply mb-2;
  }

  @media (max-width: 640px) {
    .prose {
      @apply text-base;
    }

    .prose pre {
      @apply p-3 text-sm;
    }
  }
</style>
