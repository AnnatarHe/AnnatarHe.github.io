{"version":3,"sources":["app.js","search.js","search_trigger.js"],"names":["handleSearcher","Promise","resolve","reject","searchVal","searchText","value","toLowerCase","trim","res","posts","filter","item","title","indexOf","url","then","domStr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","post","err","resultDom","innerHTML","searchBtn","document","querySelector","addEventListener","handleCloseEvent","searchMask","remove","add","trigger","searchMaskBtn","classList","e","targetClassList","target","isMaskClicked","contains","isCloseBtnClicked","isCloseIconClicked","body","eCode","keyCode"],"mappings":"AAAA,cCOA,WAAY,QAWCA,KACL,GAAIC,SAAQ,SAACC,EAASC,GAClB,GAAIC,GAAYC,EAAWC,MAAMC,cAAcC,OAC3CC,EAAMC,MAAMC,OAAO,SAACC,GACpB,MAAOA,GAAMC,MAAMN,cAAcO,QAAQV,GAAa,GAAOQ,EAAKG,IAAIR,cAAcO,QAAQV,GAAa,GAE7GF,GAAQO,KAEXO,KAAK,SAAAP,GAEF,GAAIQ,GAAS,GDGTC,GAA4B,EAC5BC,GAAoB,EACpBC,EAAiBC,MAErB,KCNA,IAAA,GAAiBC,GAAjBC,EAAiBd,EAAAe,OAAAC,cAAjBP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAuB,CDQf,GCRCU,GAAAN,EAAAhB,KACLW,IAAA,wDAEeW,EAAKb,IAAL,mDACea,EAAKf,MAAL,sDACFe,EAAKb,IAAL,8EDO9B,MAAOc,GACLV,GAAoB,EACpBC,EAAiBS,EACnB,QACE,KACSX,GAA6BK,EAAAA,WAC9BA,EAAAA,YAEN,QACE,GAAIJ,EACA,KAAMC,ICZlB,MAAOH,KAEVD,KAAK,SAAAC,GAEFa,EAAUC,UAAYd,IAlC9B,GAAMe,GAAYC,SAASC,cAAc,mBACnC7B,EAAa4B,SAASC,cAAc,kBACpCJ,EAAYG,SAASC,cAAc,yBAJjC7B,GAyCG8B,iBAAiB,QAASnC,GAAgB,GACrDgC,EAAUG,iBAAiB,QAASnC,GAAgB,MCjDxD,WAAY,QAsCFoC,KACRC,EAAWC,OAAO,QAClBD,EAAWE,IAAI,QAtChB,GAAMC,GAAUP,SAASC,cAAc,kBAGjCO,GAFQR,SAASC,cAAc,kBAEfD,SAASC,cAAc,kBACvCG,EAAaI,EAAcC,SAEjCF,GAAQL,iBAAiB,QAAS,WACjCE,EAAWC,OAAO,QAClBD,EAAWE,IAAI,UACd,GAXSE,EAcGN,iBAAiB,QAAS,SAAAQ,GACvC,GAAIC,GAAkBD,EAAEE,OAAOH,UAC3BI,EAAgBF,EAAgBG,SAAS,iBAAkB,GAAO,EAClEC,EAAoBJ,EAAgBG,SAAS,kBAAmB,GAAO,EACvEE,EAAqBL,EAAgBG,SAAS,aAAc,GAAO,GAGnED,GAAiBE,GAAqBC,IACzCb,MAIC,GACHH,SAASiB,KAAKf,iBAAiB,UAAW,SAAAQ,GACzC,GAAIQ,GAAQR,EAAES,OACVf,GAAWU,SAAS,SAAoB,IAATI,GAClCf,MAIC","file":"app.js","sourcesContent":["'use strict';\n\n// This script for search post by json that jekyll generated\n//\n// @Author  AnnatarHe\n// @Email   iamhele1994@gmail.com\n// @License MIT\n\n// get the doms\n(function () {\n    'use strict';\n\n    var searchBtn = document.querySelector('.search__action');\n    var searchText = document.querySelector('.search__input');\n    var resultDom = document.querySelector('.search__result--lists');\n\n    // Search action.\n    // First of all. get the input by user.\n    // Secondly. Using user input comparse with the json file\n    // Finally. put it in dom!\n    // Tips: innerHTML maybe good performance\n    function handleSearcher() {\n        new Promise(function (resolve, reject) {\n            var searchVal = searchText.value.toLowerCase().trim();\n            var res = posts.filter(function (item) {\n                return item.title.toLowerCase().indexOf(searchVal) > 0 || item.url.toLowerCase().indexOf(searchVal) > 0;\n            });\n            resolve(res);\n        }).then(function (res) {\n            // contact the dom string\n            var domStr = '';\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = res[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var post = _step.value;\n\n                    domStr += '\\n                <li>\\n                    <a href=\"' + post.url + '\">\\n                        <span class=\"title\">' + post.title + '</span>\\n                        <span class=\"url\">' + post.url + '</span>\\n                    </a>\\n                </li>\\n                ';\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return domStr;\n        }).then(function (domStr) {\n            // render it!\n            resultDom.innerHTML = domStr;\n        });\n    }\n\n    // listening double event.\n    searchText.addEventListener('input', handleSearcher, false);\n    searchBtn.addEventListener('click', handleSearcher, false);\n})();\n'use strict';\n\n(function () {\n\t'use strict';\n\n\tvar trigger = document.querySelector('.searchTrigger');\n\tvar close = document.querySelector('.search__close');\n\n\tvar searchMaskBtn = document.querySelector('.search__mask');\n\tvar searchMask = searchMaskBtn.classList;\n\n\ttrigger.addEventListener('click', function () {\n\t\tsearchMask.remove('hide');\n\t\tsearchMask.add('show');\n\t}, false);\n\n\t// handle close event\n\tsearchMaskBtn.addEventListener('click', function (e) {\n\t\tvar targetClassList = e.target.classList;\n\t\tvar isMaskClicked = targetClassList.contains('search__mask') ? true : false;\n\t\tvar isCloseBtnClicked = targetClassList.contains('search__close') ? true : false;\n\t\tvar isCloseIconClicked = targetClassList.contains('fa-close') ? true : false;\n\t\t// if clicked is target\n\t\t// then trigger close event\n\t\tif (isMaskClicked || isCloseBtnClicked || isCloseIconClicked) {\n\t\t\thandleCloseEvent();\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}, false);\n\tdocument.body.addEventListener('keydown', function (e) {\n\t\tvar eCode = e.keyCode;\n\t\tif (searchMask.contains('show') && eCode == 27) {\n\t\t\thandleCloseEvent();\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}, false);\n\n\t// handle close\n\t// just css animation\n\tfunction handleCloseEvent() {\n\t\tsearchMask.remove('show');\n\t\tsearchMask.add('hide');\n\t}\n})();","// This script for search post by json that jekyll generated\n//\n// @Author  AnnatarHe\n// @Email   iamhele1994@gmail.com\n// @License MIT\n\n// get the doms\n(function() {\n    'use strict'\n    const searchBtn = document.querySelector('.search__action')\n    const searchText = document.querySelector('.search__input')\n    const resultDom = document.querySelector('.search__result--lists')\n\n    // Search action. \n    // First of all. get the input by user.\n    // Secondly. Using user input comparse with the json file\n    // Finally. put it in dom!\n    // Tips: innerHTML maybe good performance \n    function handleSearcher() {\n        new Promise((resolve, reject) => {\n            let searchVal = searchText.value.toLowerCase().trim()\n            let res = posts.filter((item) => {\n                return (item.title.toLowerCase().indexOf(searchVal) > 0) || (item.url.toLowerCase().indexOf(searchVal) > 0)\n            })\n            resolve(res)\n        })\n        .then(res => {\n            // contact the dom string\n            let domStr = ''\n            for (let post of res ) {\n                domStr += `\n                <li>\n                    <a href=\"${post.url}\">\n                        <span class=\"title\">${post.title}</span>\n                        <span class=\"url\">${post.url}</span>\n                    </a>\n                </li>\n                `\n            }\n            return domStr\n        })\n        .then(domStr => {\n            // render it!\n            resultDom.innerHTML = domStr\n        })\n    }\n\n    // listening double event.\n    searchText.addEventListener('input', handleSearcher, false)\n    searchBtn.addEventListener('click', handleSearcher, false)\n})()","(function() {\n\t'use strict'\n\tconst trigger = document.querySelector('.searchTrigger')\n\tconst close = document.querySelector('.search__close')\n\n\tconst searchMaskBtn = document.querySelector('.search__mask')\n\tconst searchMask = searchMaskBtn.classList\n\n\ttrigger.addEventListener('click', () => {\n\t\tsearchMask.remove('hide')\n\t\tsearchMask.add('show')\n\t},false)\n\n\t// handle close event\n\tsearchMaskBtn.addEventListener('click', e => {\n\t\tlet targetClassList = e.target.classList\n\t\tlet isMaskClicked = targetClassList.contains('search__mask') ? true : false\n\t\tlet isCloseBtnClicked = targetClassList.contains('search__close') ? true : false\n\t\tlet isCloseIconClicked = targetClassList.contains('fa-close') ? true : false\n\t\t// if clicked is target \n\t\t// then trigger close event\n\t\tif (isMaskClicked || isCloseBtnClicked || isCloseIconClicked) {\n\t\t\thandleCloseEvent()\n\t\t}else {\n\t\t\treturn\n\t\t}\n\t}, false)\n\tdocument.body.addEventListener('keydown', e => {\n\t\tlet eCode = e.keyCode\n\t\tif (searchMask.contains('show') && eCode == 27) {\n\t\t\thandleCloseEvent()\n\t\t}else {\n\t\t\treturn\n\t\t}\n\t}, false)\n\n\t// handle close\n\t// just css animation\n\tfunction handleCloseEvent() {\n\t\tsearchMask.remove('show')\n\t\tsearchMask.add('hide')\n\t}\n})()"],"sourceRoot":"/source/"}