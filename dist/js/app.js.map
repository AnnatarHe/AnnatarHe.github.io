{"version":3,"sources":["search.js","app.js"],"names":["searchBtn","document","querySelector","searchText","resultDom","handleSearcher","Promise","resolve","reject","searchVal","value","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","posts","Symbol","iterator","next","done","post","title","indexOf","push","err","then","res","domStr","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","url","innerHTML","addEventListener","e","keyCode"],"mappings":"AAOA,YAGA,IAAMA,WAAYC,SAASC,cAAc,cACnCC,WAAaF,SAASC,cAAc,eACpCE,UAAYH,SAASC,cAAc,eAOnCG,eAAiB,WACnB,GAAIC,SAAQ,SAACC,EAASC,GAClB,GAAIC,GAAYN,WAAWO,MACvBC,KCEAC,GAA4B,EAC5BC,GAAoB,EACpBC,EAAiBC,MAErB,KDLA,IAAA,GAAiBC,GAAjBC,EAAiBC,MAAAC,OAAAC,cAAjBR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAwB,CCOhB,GDPCW,GAAAP,EAAAN,KACAa,GAAKC,MAAMC,QAAQhB,IACpBE,EAAOe,KAAKH,ICWlB,MAAOI,GACLd,GAAoB,EACpBC,EAAiBa,EACnB,QACE,KACSf,GAA6BK,EAAAA,WAC9BA,EAAAA,YAEN,QACE,GAAIJ,EACA,KAAMC,IDlBlBP,EAAQI,KAEXiB,KAAK,SAAAC,GAEF,GAAIC,GAAS,6BCuBTC,GAA6B,EAC7BC,GAAqB,EACrBC,EAAkBlB,MAEtB,KD1BA,IAAA,GAAiBmB,GAAjBC,EAAiBN,EAAAV,OAAAC,cAAjBW,GAAAG,EAAAC,EAAAd,QAAAC,MAAAS,GAAA,EAAuB,CC4Bf,GD5BCR,GAAAW,EAAAxB,KACLoB,IAAA,gDAEeP,EAAKa,IAAL,iCACCb,EAAKC,MAAL,uCACCD,EAAKa,IAAL,mEC2BnB,MAAOT,GACLK,GAAqB,EACrBC,EAAkBN,EACpB,QACE,KACSI,GAA8BI,EAAAA,WAC/BA,EAAAA,YAEN,QACE,GAAIH,EACA,KAAMC,ID/BlB,MADAH,IAAU,UAGbF,KAAK,SAAAE,GAEF1B,UAAUiC,UAAYP,IAK9B9B,WAAUsC,iBAAiB,QAASjC,gBAAgB,GACpDL,UAAUsC,iBAAiB,QAAS,SAACC,GAChB,IAAbA,EAAEC,SACFnC,mBAEL","file":"app.js","sourcesContent":["// Warning:\r\n// this script for search post by json that jekyll generated\r\n// this script is coding. DO NOT use it in production!!!\r\n//\r\n// @Author  AnnatarHe\r\n// @Email   iamhele1994@gmail.com\r\n// @License MIT\r\n'use strict'\r\n\r\n// get the doms\r\nconst searchBtn = document.querySelector('.searchBtn')\r\nconst searchText = document.querySelector('.searchText')\r\nconst resultDom = document.querySelector('.result-dom')\r\n\r\n// Search action. \r\n// First of all. get the input by user.\r\n// Secondly. Using user input comparse with the json file\r\n// Finally. put it in dom!\r\n// Tips: innerHTML maybe good performance \r\nconst handleSearcher = () => {\r\n    new Promise((resolve, reject) => {\r\n        let searchVal = searchText.value\r\n        let result = []\r\n        for (let post of posts) {\r\n            if ( post.title.indexOf(searchVal) ) {\r\n                result.push(post)\r\n            }\r\n        }\r\n        resolve(result)\r\n    })\r\n    .then(res => {\r\n        // contact the dom string\r\n        let domStr = '<ul class=\"search-result\">'\r\n        for (let post of res ) {\r\n            domStr += `\r\n            <li>\r\n                <a href=\"${post.url}\">\r\n                    <span>${post.title}</span>\r\n                    <small>${post.url}</small>\r\n                </a>\r\n            </li>\r\n            `\r\n        }\r\n        domStr += '</ul>'\r\n        return domStr\r\n    })\r\n    .then(domStr => {\r\n        // render it!\r\n        resultDom.innerHTML = domStr\r\n    })\r\n}\r\n\r\n// listening double event.\r\nsearchBtn.addEventListener('input', handleSearcher, false)\r\nsearchBtn.addEventListener('keyup', (e) => {\r\n    if (e.keyCode == 13) {\r\n        handleSearcher()\r\n    }\r\n}, false)\r\n","// Warning:\n// this script for search post by json that jekyll generated\n// this script is coding. DO NOT use it in production!!!\n//\n// @Author  AnnatarHe\n// @Email   iamhele1994@gmail.com\n// @License MIT\n'use strict';\n\n// get the doms\n\nvar searchBtn = document.querySelector('.searchBtn');\nvar searchText = document.querySelector('.searchText');\nvar resultDom = document.querySelector('.result-dom');\n\n// Search action.\n// First of all. get the input by user.\n// Secondly. Using user input comparse with the json file\n// Finally. put it in dom!\n// Tips: innerHTML maybe good performance\nvar handleSearcher = function handleSearcher() {\n    new Promise(function (resolve, reject) {\n        var searchVal = searchText.value;\n        var result = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = posts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var post = _step.value;\n\n                if (post.title.indexOf(searchVal)) {\n                    result.push(post);\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        resolve(result);\n    }).then(function (res) {\n        // contact the dom string\n        var domStr = '<ul class=\"search-result\">';\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = res[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var post = _step2.value;\n\n                domStr += '\\n            <li>\\n                <a href=\"' + post.url + '\">\\n                    <span>' + post.title + '</span>\\n                    <small>' + post.url + '</small>\\n                </a>\\n            </li>\\n            ';\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        domStr += '</ul>';\n        return domStr;\n    }).then(function (domStr) {\n        // render it!\n        resultDom.innerHTML = domStr;\n    });\n};\n\n// listening double event.\nsearchBtn.addEventListener('input', handleSearcher, false);\nsearchBtn.addEventListener('keyup', function (e) {\n    if (e.keyCode == 13) {\n        handleSearcher();\n    }\n}, false);"],"sourceRoot":"/source/"}